{"version":3,"file":"static/js/76.cbda68ef.chunk.js","mappings":"oPACA,EAA6B,yBAA7B,EAAiE,uB,kBCI/DA,EAAAA,EAAAA,SAAAA,QAAyB,gCAE3B,IA+CA,EA/Ca,WAET,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACPE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,IAEpBI,EAAAA,EAAAA,YAAU,WACX,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOnB,EAAAA,EAAAA,IAAU,UAADoB,OAAWnB,EAAO,qBAAAmB,OAAoBC,EAAAA,IAAW,KAAD,EAAAN,EAAAE,EAAAK,KAAvEN,EAAID,EAAJC,KACLR,EAAQQ,EAAKT,MACbgB,QAAQC,IAAIR,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBM,QAAQC,IAAGP,EAAAQ,IAAI,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,kBAElB,kBARc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KASflB,GACF,GAAG,CAACT,IAKJ,OACE4B,EAAAA,EAAAA,KAAA,OAAAC,UACMD,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAaF,SACtB,OAATvB,GAAiBA,EAAK0B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,cAAeC,EAASJ,EAATI,UAAS,OACpEC,EAAAA,EAAAA,MAAA,MAAAT,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EACdQ,IAAG,GAAApB,OACDgB,EAVU,mCAWYA,EAClBK,4CAAyBJ,GAE/BK,IAAKL,KAEPR,EAAAA,EAAAA,KAAA,KAAAC,SACIO,KAEJE,EAAAA,EAAAA,MAAA,KAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,eAAiB,IAAEQ,OAbtBH,EAeF,OAKjB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ProfileImg\":\"Cast_ProfileImg__krdA6\",\"CastList\":\"Cast_CastList__2oQ+0\"};","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { API_KEY } from 'utils/utils';\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Cast = () => {\n\n    const { movieId } = useParams();\n     const [cast, setCast] = useState(null);\n\n     useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const {data} = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n          setCast(data.cast);\n          console.log(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n    \n    const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n    const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n     \n  return (\n    <div>\n          <ul className={css.CastList}>\n      {cast !== null && cast.map(({ id, profile_path, original_name, character }) => (\n          <li key={id}>\n              <img className={css.ProfileImg}\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                 {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </li>\n          ))}\n   </ul>\n    </div>\n  )\n}\n\nexport default Cast\n"],"names":["axios","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","API_KEY","sent","console","log","t0","stop","apply","arguments","_jsx","children","className","css","map","_ref2","id","profile_path","original_name","character","_jsxs","src","PLACEHOLDER","alt"],"sourceRoot":""}