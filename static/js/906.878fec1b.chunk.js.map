{"version":3,"file":"static/js/906.878fec1b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","utils/utils.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesListItem\":\"MovieList_MoviesListItem__MWCAu\"};","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log('location: ', location);\n  \n  return (\n      <ul>\n        {movies !== null && movies.map(({ id, original_title }) => (\n          <li className={css.MoviesListItem } key={id}>\n            <Link state={{ from: location }}to={`/movies/${id}`}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n   \n  )\n}\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviesPage_SearchForm__jW9w8\",\"InputField\":\"MoviesPage_InputField__i1BSI\"};","import React, { useEffect, useState } from 'react';\nimport {  useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport css from './MoviesPage.module.css';\nimport { API_KEY } from 'utils/utils';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MoviesPage = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const queryValue = searchParams.get('query');\n  console.log('queryValue', queryValue);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.searchKey.value;\n    console.log('value', value);\n    setSearchParams({ query: value });\n  }\n  \n  useEffect(() => {\n    if (!queryValue) return;\n    \n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { data } = await axios.get(\n          `search/movie?api_key=${API_KEY}&query=${queryValue}&language=en-US&page=1&include_adult=false`\n        );\n        setSearchedMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchedMovies();\n  }, [queryValue])\n\n    return (\n      <div>\n        <form className={css.SearchForm } onSubmit={onFormSubmit}>\n          <input className={css.InputField } type=\"text\" name=\"searchKey\" required />\n          <button type=\"submit\">Search</button>\n        </form>\n        <ul>\n         {error !== null && <p>{error}</p>}\n          {isLoading && <Loader />}\n          {searchedMovies !== null && <MoviesList movies={searchedMovies}/>}\n        </ul>\n        \n      </div>\n    )\n  }\nexport default MoviesPage;\n"," export const API_KEY = '6321103f67240c89bac93df12144ce19';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';"],"names":["_ref","movies","location","useLocation","console","log","_jsx","children","map","_ref2","id","original_title","className","css","Link","state","from","to","concat","axios","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedMovies","setSearchedMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","queryValue","get","useEffect","fetchSearchedMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","API_KEY","sent","results","t0","message","finish","stop","apply","arguments","_jsxs","onSubmit","e","preventDefault","value","currentTarget","elements","searchKey","query","type","name","required","Loader","MoviesList"],"sourceRoot":""}