{"version":3,"file":"static/js/135.ea159e5c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","utils/utils.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"genreList\":\"MovieDetails_genreList__m+hfk\",\"linkMovieDetails\":\"MovieDetails_linkMovieDetails__Ig6DB\",\"LinkBackPage\":\"MovieDetails_LinkBackPage__J3Zs9\",\"MoviePoster\":\"MovieDetails_MoviePoster__Qvl8C\",\"MovieDetailsContainer\":\"MovieDetails_MovieDetailsContainer__wAFZJ\",\"MovieDetailsData\":\"MovieDetails_MovieDetailsData__TdinK\",\"NavigateLink\":\"MovieDetails_NavigateLink__c0Daf\"};"," import axios from 'axios';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { useParams, NavLink, Routes, Route, useLocation, Link} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { API_KEY } from 'utils/utils';\nconst Cast = lazy(() => import(\"components/Cast/Cast\"));\nconst Reviews = lazy(() => import(\"components/Reviews/Reviews\"));\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n \nconst MovieDetails = () => {\n     \n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? \"/\");\n  \n  \n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n      \n\n    }\n    fetchMovieDetails();\n  }, [movieId])\n\n    const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n  const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n  \n  return (\n     <div>\n      <Link className={css.LinkBackPage } to={ backLinkRef.current }> ‚Üê Go back</Link>\n      {error !== null && <p>{error}</p>}\n      {isLoading && <Loader/>}\n       {movieDetails !== null &&\n        <div>\n          <div className={css.MovieDetailsContainer}>\n            <div>\n          <img className={css.MoviePoster} src={`${\n            movieDetails.poster_path\n              ? BASE_POSTER_URL + movieDetails.poster_path\n              : PLACEHOLDER + '?text=' + movieDetails.original_title\n                }`} alt=\"\" />\n            </div>\n            <div className={css.MovieDetailsData}>\n           <h1>{movieDetails.original_title}</h1>\n          <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <ul className={css.genreList}>{movieDetails.genres?.map(\n           genre => (<li key={genre.id}>{genre.name}</li>)\n          )}\n              </ul>\n              </div>\n            </div>\n          <div>\n            <p>Aditional information</p>\n            <div className={css.NavigateLink}>\n              <NavLink className={css.linkMovieDetails } to=\"cast\">Cast</NavLink>\n              <NavLink className={css.linkMovieDetails } to=\"reviews\">Reviews</NavLink>\n            </div>\n            <Suspense fallback={<Loader/>}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={ <Reviews/> } />\n              </Routes>\n              </Suspense>\n          </div>\n        </div>\n        \n       }\n     </div>\n   )\n }\n \n export default MovieDetails\n "," export const API_KEY = '6321103f67240c89bac93df12144ce19';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';"],"names":["Cast","lazy","Reviews","axios","_location$state$from","_location$state","_movieDetails$genres","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","API_KEY","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Link","className","css","to","current","Loader","src","poster_path","PLACEHOLDER","original_title","alt","Math","round","vote_average","overview","genres","map","genre","name","id","NavLink","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}